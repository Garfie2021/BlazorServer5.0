@page "/counter"
@using CoreHtmlToImage
@inject IJSRuntime JS

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<br>
<br>
<button class="btn btn-primary" @onclick="DownloadFileExec_Image">Image file download</button>

@code {
    private int currentCount = 0;

    private static HtmlConverter _HtmlConverter = new HtmlConverter();

    private void IncrementCount()
    {
        currentCount++;
    }

    private async Task DownloadFileExec_Image()
    {
        var html = string.Format(TemplateData.CounterHtml, TemplateData.StyleCSS, currentCount);

        byte[] imageData;

        if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows))
        {
            imageData = _HtmlConverter.FromHtmlString(html, 800, ImageFormat.Jpg, 100);
        }
        else if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))
        {
            var inHtmlFileName = Path.GetTempFileName().Replace(".tmp", ".html");
            var outImageFileName = Path.GetTempFileName().Replace(".tmp", ".jpg");

            File.WriteAllText(inHtmlFileName, html);

            WkHtmlToImage.Exec(inHtmlFileName, outImageFileName);

            imageData = File.ReadAllBytes(outImageFileName);

            File.Delete(inHtmlFileName);
            File.Delete(outImageFileName);
        }
        else
        {
            throw new NotImplementedException();
        }

        var filename = "Counter.jpg";
        await JS.InvokeVoidAsync("saveAsFile", filename, Convert.ToBase64String(imageData));
    }
}
